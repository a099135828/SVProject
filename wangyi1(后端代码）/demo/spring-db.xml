<!-- 配置druid数据源 -->
<bean name="pooledDataSource" class="com.alibaba.druid.pool.DruidDataSource"
      init-method="init" destroy-method="close">
    <!-- 数据库连接基础信息 -->
    <property name="url" value="jdbc:mysql://localhost:3306/数据库名称?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8" />
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="username" value="账号" />
    <property name="password" value="密码" />
    <!-- 初始化连接大小 -->
    <property name="initialSize" value="0" />
    <!-- 连接池最大使用连接数量 -->
    <property name="maxActive" value="1500" />
    <!-- 连接池最小空闲 -->
    <property name="minIdle" value="0" />
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait" value="60000" />

    <!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。 -->
    <!--<property name="poolPreparedStatements" value="true" /> <property-->
    <!--name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

    <!-- 验证数据库连接有效性，要求查询语句 -->
    <property name="validationQuery" value="${validationQuery}" />
    <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
    <property name="testWhileIdle" value="true" />
    <!-- 申请连接时执行validationQuery检测连接是否有效，配置true会降低性能。 -->
    <property name="testOnBorrow" value="false" />
    <!-- 归还连接时执行validationQuery检测连接是否有效，配置true会降低性能 -->
    <property name="testOnReturn" value="false" />

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="25200000" />

    <!-- 对于长时间不使用的连接强制关闭 -->
    <property name="removeAbandoned" value="true" />
    <!-- 关闭超过30分钟的空闲连接，1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="1800" />
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="true" />
    <!-- 监控数据库 -->
    <property name="filters" value="start" />
</bean>
